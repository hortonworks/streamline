modules:
  - name: tag-registry
    className: com.hortonworks.streamline.registries.tag.service.TagRegistryModule
  - name: dashboard-registry
    className: com.hortonworks.streamline.registries.dashboard.service.DashboardRegistryModule
  - name: streams
    className: com.hortonworks.streamline.streams.service.StreamsModule
    config:
      #change the below to the path on your local machine
      streamlineStormJar: /tmp/streamline-runtime-storm-0.1.0-SNAPSHOT.jar
      stormHomeDir: /usr/local/Cellar/storm/0.10.0/
      # directory to store the results of topology test run
      topologyTestRunResultDir: /tmp
      # schema registry configuration
      schemaRegistryUrl: "http://localhost:9090/api/v1"
      #Custom processor upload configuration
      #customProcessorWatchPath: "/tmp"
      #customProcessorUploadFailPath: "/tmp/failed"
      #customProcessorUploadSuccessPath: "/tmp/uploaded"
      mavenRepoUrl: "storm-hdf^http://nexus-private.hortonworks.com/nexus/content/groups/public/"

catalogRootUrl: "http://localhost:8080/api/v1/catalog"


# Filesystem based jar storage
fileStorageConfiguration:
  className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: "/tmp"

dashboardConfiguration:
 url: ""

# HDFS based Jar storage
#fileStorageConfiguration:
#  className: "com.hortonworks.registries.common.util.HdfsFileStorage"
#  properties:
#    fsUrl: "file:///"
#    directory: "/tmp/test-hdfs"

# storage provider configuration
#
# Example configuration for inmemory is:
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.memory.InMemoryStorageManager"
#
# Example configuration for phoenix based JDBC driver
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "phoenix"
#   queryTimeoutInSecs: 30
#   db.properties:
#     jdbcDriverClass: "org.apache.phoenix.jdbc.PhoenixDriver"
#     jdbcUrl: "jdbc:phoenix:localhost:2181"
#
# MySQL based jdbc provider configuration is:
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "mysql"
#   queryTimeoutInSecs: 30
#   db.properties:
#     dataSourceClassName: "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
#     dataSource.url: "jdbc:mysql://localhost/test"
#
# Atlas based provider configuration is:
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.atlas.AtlasStoreManager"
# properties:
#   atlas.graph.storage.backend: "berkeleyje"
#   atlas.graph.storage.directory: "/var/data/streamline/graph/berkley"
#   atlas.graph.index.search.backend: "elasticsearch"
#   atlas.graph.index.search.directory: "/var/data/streamline/graph/elasticsearch"
#   atlas.graph.index.search.elasticsearch.client-only: false
#   atlas.graph.index.search.elasticsearch.local-mode: true
#   atlas.graph.index.search.elasticsearch.create.sleep: 4000
#   atlas.DeleteHandler.impl: "org.apache.atlas.repository.graph.HardDeleteHandler"
#   atlas.EntityAuditRepository.impl: "org.apache.atlas.repository.audit.NoopEntityAuditRepository"

storageProviderConfiguration:
 providerClass: "com.hortonworks.registries.storage.impl.memory.InMemoryStorageManager"

enableCors: true
corsUrlPatterns:
  - "/api/v1/dashboards/*"

server:
  rootPath: '/api/*'
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 1111
#    - type: https
#      port: 8443
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
# this requires the alpn-boot library on the JVM's boot classpath
#    - type: spdy3
#      port: 8445
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
  adminConnectors:
    - type: http
      port: 1112
#    - type: https
#      port: 8444
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.hortonworks.streamline: TRACE


  appenders:
    - type: console
#    - type: file
#      threshold: DEBUG
#      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
#      currentLogFilename: /tmp/application.log
#      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
#      archivedFileCount: 7
#      timeZone: UTC
#      maxFileSize: 10MB

#jerseyClient:
#  minThreads: 1
#  maxThreads: 16
#  workQueueSize: 1000
#  gzipEnabled: true
#  gzipEnabledForRequests: true
#  chunkedEncodingEnabled: true
#  timeout: 1000ms
#  connectionTimeout: 1000ms
#  timeToLive: 1h
#  cookiesEnabled: false
#  maxConnections: 10
#  maxConnectionsPerRoute: 1024
#  keepAlive: 0ms
#  retries: 10
#  userAgent: Storm-Client

#loginConfiguration:
#  className: "com.hortonworks.registries.auth.KerberosLogin"
#  params:
#      kinit.cmd: "/usr/local/bin/kinit"
#      ticket.renew.window.factor: "0.8"
#      ticket.renew.jitter: "0.05"
#      min.time.before.relogin: "60000"

#servletFilters:
# - className: "com.hortonworks.registries.auth.server.AuthenticationFilter"
#   params:
#     type: "kerberos"
#     kerberos.principal: "HTTP/streamline-ui-host.com"
#     kerberos.keytab: "/vagrant/keytabs/http.keytab"
#     kerberos.name.rules: "RULE:[2:$1@$0]([jt]t@.*EXAMPLE.COM)s/.*/$MAPRED_USER/ RULE:[2:$1@$0]([nd]n@.*EXAMPLE.COM)s/.*/$HDFS_USER/DEFAULT"
