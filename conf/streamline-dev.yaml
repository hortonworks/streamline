modules:
  - name: tag-registry
    className: com.hortonworks.streamline.registries.tag.service.TagRegistryModule
  - name: dashboard-registry
    className: com.hortonworks.streamline.registries.dashboard.service.DashboardRegistryModule
  - name: model-registry
    className: com.hortonworks.streamline.registries.model.service.MLModelRegistryModule
  - name: streams
    className: com.hortonworks.streamline.streams.service.StreamsModule
    config:
      #change the below to the path on your local machine
      streamlineStormJar: /tmp/streamline-runtime-storm-0.1.0-SNAPSHOT.jar
      stormHomeDir: /usr/local/Cellar/storm/0.10.0/
      # directory to store the results of topology test run
      topologyTestRunResultDir: /tmp
      # schema registry configuration
      schemaRegistryUrl: "http://localhost:9090/api/v1"
      mavenRepoUrl: "hwx-public^http://repo.hortonworks.com/content/groups/public/,hwx-private^http://nexus-private.hortonworks.com/nexus/content/groups/public/"
      # Proxy server configuration for downloading artifacts (optional)
      # proxyUrl: "http://proxyHost:proxyPort"
      # You can provide username and password when proxy server requires basic auth
      # proxyUsername: "username"
      # proxyPassword: "password"

catalogRootUrl: "http://localhost:8080/api/v1/catalog"

enableCors: true
corsUrlPatterns:
  - "/api/v1/dashboards/*"

server:
  rootPath: '/api/*'
  applicationConnectors:
    - type: http
      port: 8080
  adminConnectors:
    - type: http
      port: 8081

# ------------------------------------------------
# File storage configuration
# ------------------------------------------------
# Note: In HA mode HDFS or DB based file storage should be used
# --

# --
# Filesystem based file storage - uses local file system to store the uploaded files
# --
fileStorageConfiguration:
 className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
 properties:
   directory: "/tmp"

# --
# HDFS file storage - uses HDFS to store the uploaded files
# --
#fileStorageConfiguration:
#  className: com.hortonworks.registries.common.util.HdfsFileStorage
#  properties:
#    directory: /hdf/streamline/jars
#    fsUrl: hdfs://localhost:9090

# --
# DB based file storage - stores the uploaded files as blob in Db
# --
#fileStorageConfiguration:
# className: "com.hortonworks.registries.storage.filestorage.DbFileStorage"

# ------------------------------------------------
# Storage provider configuration
# ------------------------------------------------
# --
# In-memory storage provider configuration:
# --
storageProviderConfiguration:
  providerClass: "com.hortonworks.registries.storage.impl.memory.InMemoryStorageManager"

# --
# MySQL based storage provider configuration:
# --
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#  db.type: "mysql"
#  queryTimeoutInSecs: 30
#  db.properties:
#    dataSourceClassName: "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
#    dataSource.url: "jdbc:mysql://localhost/streamline_db"
#    dataSource.user: "streamline_user"
#    dataSource.password: "streamline_password"

# --
# PostgreSQL based storage provider configuration
# --
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "postgresql"
#   queryTimeoutInSecs: 30
#   db.properties:
#     dataSourceClassName: "org.postgresql.ds.PGSimpleDataSource"
#     dataSource.url: "jdbc:postgresql://localhost/streamline_db"
#     dataSource.user: "streamline_user"
#     dataSource.password: "streamline_password"

# --
# Oracle based storage provider configuration
# --
#storageProviderConfiguration:
# providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "oracle"
#   queryTimeoutInSecs: 30
#   db.properties:
#     dataSourceClassName: "oracle.jdbc.pool.OracleDataSource"
#     dataSource.url: "jdbc:oracle:thin:@localhost:1521/orclpdb1.localdomain"
#     dataSource.user: "streamline_user"
#     dataSource.password: "streamline_password"


# ------------------------------------------------
# Dashboard configuration
# ------------------------------------------------
dashboardConfiguration:
 url: ""

# ------------------------------------------------
# Logging configuration
# ------------------------------------------------
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO
  # Logger-specific levels.
  loggers:
    # Sets the level for 'com.example.app' to DEBUG.
    com.hortonworks.streamline: DEBUG
  appenders:
    - type: console
    - type: file
      threshold: DEBUG
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      currentLogFilename: ./logs/streamline.log
      archivedLogFilenamePattern: ./logs/streamline-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 10MB

# ------------------------------------------------
# Authorizer configuration
# ------------------------------------------------
#authorizerConfiguration:
# className: "com.hortonworks.streamline.streams.security.impl.DefaultStreamlineAuthorizer"
# adminPrincipals:
#   - "root"

# ------------------------------------------------
# Truststore configuration
# ------------------------------------------------
# Truststore information which is needed for importing certificated Ambari cluster.
# which default truststore doesn't cover the CA or self-certified.
# When the options are not provided, JDK default truststore will be used.
# It only supports single truststores, so admin needs to maintain single truststore and import certificates to that.
#trustStorePath: ""
#trustStorePassword: ""

# ------------------------------------------------
# Authentication configuration
# ------------------------------------------------
#loginConfiguration:
#  className: "com.hortonworks.registries.auth.KerberosLogin"
#  params:
#      kinit.cmd: "/usr/local/bin/kinit"
#      ticket.renew.window.factor: "0.8"
#      ticket.renew.jitter: "0.05"
#      min.time.before.relogin: "60000"

#servletFilters:
# - className: "com.hortonworks.registries.auth.server.AuthenticationFilter"
#   params:
#     type: "kerberos"
#     kerberos.principal: "HTTP/streamline-ui-host.com"
#     kerberos.keytab: "/vagrant/keytabs/http.keytab"
#     kerberos.name.rules: "RULE:[2:$1@$0]([jt]t@.*EXAMPLE.COM)s/.*/$MAPRED_USER/ RULE:[2:$1@$0]([nd]n@.*EXAMPLE.COM)s/.*/$HDFS_USER/DEFAULT"
#     token.validity: "36000"
#     cookie.path: "/"